//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EndorseSvcRef
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EndorseSvcRef.EndorseRefSvc")]
    public interface EndorseRefSvc
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndorseRefSvc/GetEndorseRefNo", ReplyAction="http://tempuri.org/EndorseRefSvc/GetEndorseRefNoResponse")]
        EndorseSvcRef.GetEndorseRefNoResponse GetEndorseRefNo(EndorseSvcRef.GetEndorseRefNoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndorseRefSvc/GetEndorseRefNo", ReplyAction="http://tempuri.org/EndorseRefSvc/GetEndorseRefNoResponse")]
        System.Threading.Tasks.Task<EndorseSvcRef.GetEndorseRefNoResponse> GetEndorseRefNoAsync(EndorseSvcRef.GetEndorseRefNoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndorseRefSvc/GetContractRefNo", ReplyAction="http://tempuri.org/EndorseRefSvc/GetContractRefNoResponse")]
        EndorseSvcRef.GetContractRefNoResponse GetContractRefNo(EndorseSvcRef.GetContractRefNoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EndorseRefSvc/GetContractRefNo", ReplyAction="http://tempuri.org/EndorseRefSvc/GetContractRefNoResponse")]
        System.Threading.Tasks.Task<EndorseSvcRef.GetContractRefNoResponse> GetContractRefNoAsync(EndorseSvcRef.GetContractRefNoRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEndorseRefNo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEndorseRefNoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string channelType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string workType;
        
        public GetEndorseRefNoRequest()
        {
        }
        
        public GetEndorseRefNoRequest(string channelType, string workType)
        {
            this.channelType = channelType;
            this.workType = workType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEndorseRefNoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetEndorseRefNoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ITUtility.ProcessResult GetEndorseRefNoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long refNo;
        
        public GetEndorseRefNoResponse()
        {
        }
        
        public GetEndorseRefNoResponse(ITUtility.ProcessResult GetEndorseRefNoResult, long refNo)
        {
            this.GetEndorseRefNoResult = GetEndorseRefNoResult;
            this.refNo = refNo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContractRefNo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetContractRefNoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string channelType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string workType;
        
        public GetContractRefNoRequest()
        {
        }
        
        public GetContractRefNoRequest(string channelType, string workType)
        {
            this.channelType = channelType;
            this.workType = workType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContractRefNoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetContractRefNoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ITUtility.ProcessResult GetContractRefNoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long refNo;
        
        public GetContractRefNoResponse()
        {
        }
        
        public GetContractRefNoResponse(ITUtility.ProcessResult GetContractRefNoResult, long refNo)
        {
            this.GetContractRefNoResult = GetContractRefNoResult;
            this.refNo = refNo;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface EndorseRefSvcChannel : EndorseSvcRef.EndorseRefSvc, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class EndorseRefSvcClient : System.ServiceModel.ClientBase<EndorseSvcRef.EndorseRefSvc>, EndorseSvcRef.EndorseRefSvc
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EndorseRefSvcClient() : 
                base(EndorseRefSvcClient.GetDefaultBinding(), EndorseRefSvcClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_EndorseRefSvc.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndorseRefSvcClient(EndpointConfiguration endpointConfiguration) : 
                base(EndorseRefSvcClient.GetBindingForEndpoint(endpointConfiguration), EndorseRefSvcClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndorseRefSvcClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EndorseRefSvcClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndorseRefSvcClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EndorseRefSvcClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndorseRefSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EndorseSvcRef.GetEndorseRefNoResponse EndorseSvcRef.EndorseRefSvc.GetEndorseRefNo(EndorseSvcRef.GetEndorseRefNoRequest request)
        {
            return base.Channel.GetEndorseRefNo(request);
        }
        
        public ITUtility.ProcessResult GetEndorseRefNo(string channelType, string workType, out long refNo)
        {
            EndorseSvcRef.GetEndorseRefNoRequest inValue = new EndorseSvcRef.GetEndorseRefNoRequest();
            inValue.channelType = channelType;
            inValue.workType = workType;
            EndorseSvcRef.GetEndorseRefNoResponse retVal = ((EndorseSvcRef.EndorseRefSvc)(this)).GetEndorseRefNo(inValue);
            refNo = retVal.refNo;
            return retVal.GetEndorseRefNoResult;
        }
        
        public System.Threading.Tasks.Task<EndorseSvcRef.GetEndorseRefNoResponse> GetEndorseRefNoAsync(EndorseSvcRef.GetEndorseRefNoRequest request)
        {
            return base.Channel.GetEndorseRefNoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EndorseSvcRef.GetContractRefNoResponse EndorseSvcRef.EndorseRefSvc.GetContractRefNo(EndorseSvcRef.GetContractRefNoRequest request)
        {
            return base.Channel.GetContractRefNo(request);
        }
        
        public ITUtility.ProcessResult GetContractRefNo(string channelType, string workType, out long refNo)
        {
            EndorseSvcRef.GetContractRefNoRequest inValue = new EndorseSvcRef.GetContractRefNoRequest();
            inValue.channelType = channelType;
            inValue.workType = workType;
            EndorseSvcRef.GetContractRefNoResponse retVal = ((EndorseSvcRef.EndorseRefSvc)(this)).GetContractRefNo(inValue);
            refNo = retVal.refNo;
            return retVal.GetContractRefNoResult;
        }
        
        public System.Threading.Tasks.Task<EndorseSvcRef.GetContractRefNoResponse> GetContractRefNoAsync(EndorseSvcRef.GetContractRefNoRequest request)
        {
            return base.Channel.GetContractRefNoAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_EndorseRefSvc))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_EndorseRefSvc))
            {
                return new System.ServiceModel.EndpointAddress("http://intranetuat:88/EndorseRefSvc/EndorseRef.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EndorseRefSvcClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_EndorseRefSvc);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EndorseRefSvcClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_EndorseRefSvc);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_EndorseRefSvc,
        }
    }
}
